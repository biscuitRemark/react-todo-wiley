{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/Form.js","App.js","index.js"],"names":["DEFAULT_VALUE","changing","updateItem","Todo","item","todos","setNewArr","useContext","TodoContext","useState","state","setState","handDelete","useCallback","id","filter","handComplete","map","completed","handChangeText","e","pre","text","target","value","handUpdate","updated","Date","className","style","flex","justifyContent","paddingTop","moment","created","format","onClick","fontSize","type","onChange","TodoList","arrTodos","Form","setNewText","setTodos","placeholder","preventDefault","Math","random","createContext","App","newText","setArrTodos","saveLocalStore","localStorage","setItem","JSON","stringify","setSortedTodos","nextValue","sort","a","b","useEffect","local","getItem","parse","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c172cce7.chunk.js","sourcesContent":["import React, {useCallback, useContext, useState} from 'react';\r\nimport {TodoContext} from './../App';\r\nimport moment from \"moment\";\r\n\r\nconst DEFAULT_VALUE = {\r\n  changing: false,\r\n  updateItem: {},\r\n}\r\n\r\nconst Todo = ({item, todos }) => {\r\n  const setNewArr = useContext(TodoContext);\r\n  const [state, setState] = useState(DEFAULT_VALUE);\r\n\r\n  const handDelete = useCallback((id) => {\r\n    setNewArr(todos.filter((item) => item.id !== id ));\r\n  },[todos, setNewArr]);\r\n\r\n  const handComplete = useCallback((id) => {\r\n    setNewArr(todos.map(item => {\r\n      if (item.id === id) {\r\n        return {...item, completed: !item.completed}\r\n      } else {\r\n        return item;\r\n      }\r\n\r\n    }));\r\n  },[todos]);\r\n\r\n  const handChangeText = useCallback((e) => {\r\n    setState((pre) => ({...pre, updateItem: {...pre.updateItem, text: e.target.value}}));\r\n  },[state]);\r\n\r\n  const handUpdate = useCallback(() => {\r\n    setNewArr([...todos.filter((item) => item.id !== state.updateItem.id ), {...state.updateItem, updated: new Date(), changing: false}]);\r\n    setState(DEFAULT_VALUE);\r\n  },[state, todos]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"todo\">\r\n        {!state.changing &&\r\n          <>\r\n            <div style={{flex: '1 1 0'}}>\r\n              <li className={item.completed ? \"todo-item completed\" : \"todo-item\"}>{item.text}</li>\r\n              <div className=\"flex\" style={{ justifyContent: 'space-between', paddingTop: '100px!important'}}>\r\n                <span className=\"date-created\">{moment(item.created).format('h:mm:ss a, DD-MM-YY')}</span>\r\n                {item.updated && <span className=\"date-created\">upd: {moment(item.updated).format('h:mm:ss a, DD-MM-YY')}</span>}\r\n              </div>\r\n            </div>\r\n            <div className=\"flex\">\r\n              <button className=\"change-btn\" onClick={() => setState({changing: true, updateItem: item})}>\r\n                <i className=\"fa fa-edit size-icon\"></i>\r\n              </button>\r\n              <button className={item.completed ? 'complete-btn check-mark' : 'complete-btn'} onClick={() => handComplete(item.id)}>\r\n                <i className=\"fa fa-check size-icon\"></i>\r\n              </button>\r\n              <button className=\"trash-btn\" onClick={() => handDelete(item.id)}>\r\n                <i className=\"fa fa-trash size-icon\"></i>\r\n              </button>\r\n            </div>\r\n          </>\r\n        }\r\n        {state.changing &&\r\n        <>\r\n          <button className=\"trash-btn\" onClick={() => setState('')}>\r\n            <span style={{fontSize:\"18px\"}}>cancel</span>\r\n          </button>\r\n          <div>\r\n            <input type=\"text\" className=\"todo-input\" value={state.updateItem.text} onChange={handChangeText}></input>\r\n          </div>\r\n          <div>\r\n            <button className=\"trash-btn\" onClick={() => handUpdate(item.id)}>\r\n              <span style={{fontSize:\"18px\"}}>update</span>\r\n            </button>\r\n          </div>\r\n        </>}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({arrTodos}) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {arrTodos.map((item) => (\r\n            <Todo key={item.id} item={item} todos={arrTodos}/>\r\n          )\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nconst Form = ({text, setNewText, todos, setTodos}) => {\r\n\r\n  const handInput = (e) => {\r\n    const value = e.target.value;\r\n    setNewText(value);\r\n  };\r\n\r\n  const submitTodoHand =(e) => {\r\n    e.preventDefault();\r\n    if (!text) return;\r\n\r\n    setTodos([\r\n      ...todos,\r\n      {\r\n        id: Math.random() * 100,\r\n        text: text,\r\n        completed: false,\r\n        changing: false,\r\n        updated: '',\r\n        created: new Date(),\r\n      }\r\n    ]);\r\n\r\n    setNewText('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <input value={text} onChange={handInput} type=\"text\" placeholder=\"Add a todo\"/>\r\n        <button onClick={submitTodoHand} className=\"todo-button todo-button\" type=\"submit\">\r\n          <i className=\"fa fa-plus-square\"></i>\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;","import './App.css';\nimport TodoList from \"./components/TodoList\";\nimport Form from \"./components/Form\";\nimport {useState, createContext, useEffect, useCallback} from \"react\";\n\nexport const TodoContext = createContext();\n\nfunction App() {\n  const [newText, setNewText] = useState('');\n  const [arrTodos, setArrTodos] = useState([]);\n\n  const saveLocalStore = useCallback(() => {\n    localStorage.setItem('todos', JSON.stringify(arrTodos));\n  },[arrTodos]);\n\n\n  useEffect(() => {\n    let local = localStorage.getItem('todos');\n    if (local) {\n      setSortedTodos(JSON.parse(local));\n    }\n\n  },[]);\n\n  function setSortedTodos(nextValue) {\n    setArrTodos(nextValue.sort((a,b) => {\n      if(a.text < b.text) { return 1; }\n      if(a.text > b.text) { return -1; }\n      return 0;\n    }));\n  }\n\n  useEffect(() => {\n    saveLocalStore();\n  }, [arrTodos, saveLocalStore]);\n\n  return (\n    <div className=\"App\">\n      <header style={{fontSize: '40px'}}>Todo list</header>\n      <main>\n        <Form text={newText} setNewText={setNewText} todos={arrTodos} setTodos={setSortedTodos}/>\n        <TodoContext.Provider value={setSortedTodos} >\n          <TodoList arrTodos={arrTodos} />\n        </TodoContext.Provider>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}